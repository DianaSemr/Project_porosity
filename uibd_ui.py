# -*- coding: utf-8 -*-
import sqlite3

# Form implementation generated from reading ui file 'c:\Users\Диана\PycharmProjects\Project_porosity\uibd.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(994, 427)
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 981, 131))
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setGeometry(QtCore.QRect(10, 150, 871, 91))
        self.groupBox.setObjectName("groupBox")
        self.btnAddRow = QtWidgets.QPushButton(self.groupBox)
        self.btnAddRow.setGeometry(QtCore.QRect(700, 30, 141, 41))
        self.btnAddRow.setObjectName("btnAddRow")
        self.text_edit_material_name = QtWidgets.QTextEdit(self.groupBox)
        self.text_edit_material_name.setGeometry(QtCore.QRect(20, 30, 121, 31))
        self.text_edit_material_name.setObjectName("text_edit_material_name")
        self.text_edit_material_area = QtWidgets.QTextEdit(self.groupBox)
        self.text_edit_material_area.setGeometry(QtCore.QRect(160, 30, 111, 31))
        self.text_edit_material_area.setObjectName("text_edit_material_area")
        self.text_edit_material_area_std = QtWidgets.QTextEdit(self.groupBox)
        self.text_edit_material_area_std.setGeometry(QtCore.QRect(290, 30, 111, 31))
        self.text_edit_material_area_std.setObjectName("text_edit_material_area_std")
        self.text_edit_material_porous = QtWidgets.QTextEdit(self.groupBox)
        self.text_edit_material_porous.setGeometry(QtCore.QRect(420, 30, 111, 31))
        self.text_edit_material_porous.setObjectName("text_edit_material_porous")
        self.text_edit_material_porous_std = QtWidgets.QTextEdit(self.groupBox)
        self.text_edit_material_porous_std.setGeometry(QtCore.QRect(550, 30, 101, 31))
        self.text_edit_material_porous_std.setObjectName("text_edit_material_porous_std")
        self.groupBox_2 = QtWidgets.QGroupBox(Dialog)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 260, 871, 81))
        self.groupBox_2.setObjectName("groupBox_2")
        self.text_edit_material_id = QtWidgets.QTextEdit(self.groupBox_2)
        self.text_edit_material_id.setGeometry(QtCore.QRect(10, 20, 151, 41))
        self.text_edit_material_id.setObjectName("text_edit_material_id")
        self.btnDeleteRow = QtWidgets.QPushButton(self.groupBox_2)
        self.btnDeleteRow.setGeometry(QtCore.QRect(700, 20, 141, 41))
        self.btnDeleteRow.setObjectName("btnDeleteRow")
        self.btnOK = QtWidgets.QPushButton(Dialog)
        self.btnOK.setGeometry(QtCore.QRect(770, 380, 101, 31))
        self.btnOK.setObjectName("btnOK")

        self.fill_table()
        self.btnAddRow.clicked.connect(self.push_button_add_click)  # кнопка добавления записи
        self.btnDeleteRow.clicked.connect(self.push_button_delete_click)  # кнопка удаления записи
        self.tableWidget.itemChanged.connect(self.update_info)  # внесение изменений
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # внесение изменений в данные таблицы

    def update_info(self, item):
        col = item.column()
        row = item.row()
        new_value = item.text()
        id = int(self.tableWidget.item(row, 0).text())
        conn = sqlite3.connect("my_database.db")
        cur = conn.cursor()
        if col == 1:
            cur.execute("UPDATE Materials SET name = ? WHERE id = ?", (new_value, id))
            conn.commit()
        else:
            try:
                new_value = float(new_value)
                if col == 2:
                    col_name = "pore_area_mean"
                elif col == 3:
                    col_name = "pore_area_std"
                elif col == 4:
                    col_name = "porous_mean"
                else:
                    col_name = "porous_std"
                cur.execute(f"UPDATE Materials SET {col_name} = ? WHERE id = ?", (new_value, id))
                conn.commit()
            except:
                print("Error")
        conn.close()

        # Заполнение таблицы на форме значениями из базы данных

    def fill_table(self):
        conn = sqlite3.connect("my_database.db")
        cur = conn.cursor()
        results = cur.execute("SELECT * FROM Materials;").fetchall()
        conn.close()

        rows = len(results)
        columns = len(results[0])
        self.tableWidget.setRowCount(rows)
        self.tableWidget.setColumnCount(columns)
        for i in range(rows):
            for j in range(columns):
                item = QtWidgets.QTableWidgetItem("{}".format(results[i][j]))
                # item.setTextAlignment(Qt.AlignHCenter)
                self.tableWidget.setItem(i, j, item)

        # Добавление новой записи

    def push_button_add_click(self):
        material_name = self.text_edit_material_name.toPlainText()
        material_area = self.text_edit_material_area.toPlainText()
        material_area_std = self.text_edit_material_area_std.toPlainText()
        material_porous = self.text_edit_material_porous.toPlainText()
        material_porous_std = self.text_edit_material_porous_std.toPlainText()
        data = [material_name, material_area, material_area_std, material_porous, material_porous_std]
        flag = [True if (m is not None and m != '') else False for m in data]
        if flag:
            try:
                material_area = float(material_area)
                material_area_std = float(material_area_std)
                material_porous = float(material_porous)
                material_porous_std = float(material_porous_std)
                conn = sqlite3.connect("my_database.db")
                cur = conn.cursor()
                cur.execute(
                    """INSERT INTO Materials(name, pore_area_mean, pore_area_std, porous_mean, porous_std) VALUES (?,?,?,?,?)""",
                    (material_name, material_area, material_area_std, material_porous, material_porous_std))
                conn.commit()
                conn.close()
                self.fill_table()
            except Exception as e:
                print(e)

        # Удаление записи

    def push_button_delete_click(self):
        record_id = int(self.text_edit_material_id.toPlainText())
        try:
            if 0 <= record_id:
                conn = sqlite3.connect("my_database.db")
                cur = conn.cursor()
                cur.execute('DELETE FROM Materials WHERE id=?', (record_id,))
                conn.commit()
                conn.close()
            self.fill_table()
        except Exception as e:
            print(e)
        self.text_edit_material_id.setPlainText('')
        self.text_edit_material_id.clear()


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.groupBox.setTitle(_translate("Dialog", "Добавить запись"))
        self.text_edit_material_name.setPlaceholderText(_translate("Dialog", "наименование материала"))
        self.text_edit_material_area.setPlaceholderText(_translate("Dialog", "площадь поры"))
        self.text_edit_material_area_std.setPlaceholderText(_translate("Dialog", "откл. от площ."))
        self.text_edit_material_porous.setPlaceholderText(_translate("Dialog", "пористость"))
        self.text_edit_material_porous_std.setPlaceholderText(_translate("Dialog", "откл. от пористости"))
        self.btnAddRow.setText(_translate("Dialog", "Добавить"))
        self.groupBox_2.setTitle(_translate("Dialog", "Удалить запись"))
        self.text_edit_material_id.setPlaceholderText(_translate("Dialog", "номер записи"))
        self.btnDeleteRow.setText(_translate("Dialog", "Удалить"))
        self.btnOK.setText(_translate("Dialog", "ОК"))
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Наименование"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Площадь поры"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Откл. от площади"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "Пористость"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "Откл. от пористости"))
